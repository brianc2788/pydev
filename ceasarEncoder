#! /usr/bin/env python3
'''
ceasarEncoder.py
--------------
Notes:
this is an early python script of mine
and i think i went out of my way to use dicts
and file io for my own practice.

all of that, plus i was trying to write this
cipher before seeing any example implementations.

the ceasar cipher is the basis for rotational
ciphers, such as ROT13.

http://github.com/user5260/user5260
'''
import os,sys
# Ceasar Encoder Dictionary
AlphaDecimal = {'a':0,'b':1,'c':2,'d':3,'e':4,'f':5,'g':6,'h':7,'i':8,'j':9,'k':10,'l':11,'m':12,'n':13,'o':14,'p':15,'q':16,'r':17,'s':18,'t':19,'u':20,'v':21,'w':22,'x':23,'y':24,'z':25}
DecimalAlpha = {0:'a',1:'b',2:'c',3:'d',4:'e',5:'f',6:'g',7:'h',8:'i',9:'j',10:'k',11:'l',12:'m',13:'n',14:'o',15:'p',16:'q',17:'r',18:'s',19:'t',20:'u',21:'v',22:'w',23:'x',24:'y',25:'z'}

def encodeMsg(msgIn,nKey):
    NumList = []
    encMsg = ''

    for n in msgIn:
        if n == '\n':
            break
        elif n not in AlphaDecimal:
            NumList.append(n)
        else:
            NumList.append(str((AlphaDecimal[n] + nKey)%26))

    for n in NumList:
        if n == ' ':
            encMsg += ' '
        else:
            encMsg += DecimalAlpha[int(n)]

    return encMsg

if len(sys.argv) < 2:
    print('must enter a valid filename argument')
    sys.exit()
else:
    if not os.path.isfile(sys.argv[1]):
        print('file not found. please enter a valid plain-text file.')
        sys.exit()
    else:
        readFile = open(sys.argv[1],'r')
        if not readFile.readable():
            print('couldnt read the file. exiting.')
            sys.exit()
        else:
            fileMsg = readFile.read()
            readFile.close()
            usrKey = int(input('enter key: '))
            newMsg = encodeMsg(fileMsg,usrKey)

            print('original message:\n'+fileMsg)
            print('encoded message:\n'+newMsg)
