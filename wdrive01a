#!/usr/bin/env python3
'''
wdrive01
-----------------
A script i use for wardriving.
N00b 8021x pentesting.

NOTE: Because of the privileges needed to manip-
ulate the NIC, run as (temp solution):
>$ sudo $(which wd01b) <interface>
I mean, unless you wanna type the entire path...

This script will put the wifi NIC in monitor mode
with a randomized hw address (w/real OUI) and start
capturing packets being broadcasted over wifi with
airodump-ng in .cap and .csv formats.

Happy to say, the script also cleans up after itself
by hanging up airodump (run as a child process),
reverting the NIC back to its permanent, burned-in hw
address, setting it to managed mode, and finally,
restoring NetworkManager.
Wifi ops resume as normal and, in my case, re-authenticates
with my router as the same client; having the same hw addr
and recieving the same IP back from dynamic hosting.
Exactly what I wanted with enough error handling for
personal-use and no compromises made.

Also, I wanted to add that the script gets the date
to use as a prefix for capture files.

Authored by brianc2788@gmail.com
http://github.com/user5260/pyscripts/wdrive01a
'''
import sys,subprocess

# Glob. variables
# ---------------
datearg = subprocess.getoutput('date +%b%d').casefold()		# gets output from 'date' & lowercase it.
iface = None

# Handle cmdline args like a n0b.
if len(sys.argv) != 2:
	print('Usage: $> wdrive01 <interface>')
	sys.exit()
else:
	iface = sys.argv[1]

# Glob. functions
# ---------------
def SysCmd(cmdlist, bPrint):
	cProcess = subprocess.Popen(cmdlist,shell=False,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
	if bPrint:
		output = cProcess.stdout.read().decode()
		print(output)

def revertNic(ifname):
	SysCmd(['ifconfig',ifname,'down'],False)
	SysCmd(['iw',ifname,'set','type','managed'],False)
	SysCmd(['ifconfig',ifname,'hw','ether','c8:b2:9b:62:70:0f'],False)
	#SysCmd(['macchanger','-p',ifname],True)
	SysCmd(['ifconfig',ifname,'up'],False)
	SysCmd(['service','NetworkManager','start'],False)						#handles wpa_supplicant.

# main() function
# ---------------
def main():
	try:
		""" Disable conflicting network services/daemons. """
		SysCmd(['service','NetworkManager','stop'],False)
		SysCmd(['service','wpa_supplicant','stop'],False)

		""" Temp. take down NIC to spoof its MAC & switch to monitor mode. """
		SysCmd(['ifconfig',iface,'down'],False)
		SysCmd(['macchanger','-ba',iface],True) # -b is 'burned in addr', -a is any (random mac).
		SysCmd(['iw',iface,'set','type','monitor'],False)
		SysCmd(['ifconfig',iface,'up'],False)

		""" Create child process for airodump-ng. """
		sub_airodump = subprocess.Popen(
			['airodump-ng',
			'--background','1',
			'--output-format','cap,csv',
			'-w',datearg,iface]
			,shell=False,stdout=subprocess.PIPE,stderr=subprocess.PIPE)

		print("Writing captures. Enter 'q' to quit\n")
		input1 = ''
		while(input1 != 'q'):
			#run until user quits
			input1 = input('Enter :')
			if input1 == 'q':
				sub_airodump.terminate()
			else:
				continue

		revertNic(iface)

	except BaseException:
		if KeyboardInterrupt:
			sub_airodump.terminate()
			revertNic(iface)
			sys.exit(0)
		else:
			sys.exit(1)


if __name__ == '__main__':
	main()
