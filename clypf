#! /usr/bin/env python3
'''
clypf
-----
Copies text from files to your clipboard instance.
Requires pyperclip.
Authored by brianc2788@gmail.com
Github: http://github.com/user5260
'''
import os,sys,pyperclip

""" TODO: Narrow the try block to just where it's needed. """
try:	
	if len(sys.argv) == 1:
		print(' Help/Usage:\n',
			  '$> clypf <file>\n',
			  'Copies TEXT FILES to the clipboard.')

	elif len(sys.argv) == 2:
		argPath = sys.argv[1]

		""" Check for abs path """       # Use abspath()?
		if not os.path.isabs(argPath):
			argPath = os.path.join(os.getcwd(),argPath)

		""" DEBUG """
		#print('current dir: '+os.getcwd())
		#print('target file: '+argPath)

		if not os.path.isfile(argPath):
			print('file not found')
		else:
			fileString = ''
			with open(argPath,mode='r') as rfile:
				fileString = rfile.read()

			if fileString == '':
				print('file not readable')
			else:
				fileStringF = ''
				
				""" Remove trailing newline(s). """
				if fileString.endswith('\n'):
					fileStringF = fileString[:len(fileString)-1]
				pyperclip.copy(fileStringF)

				""" DEBUG output: print a sitrep. """
				#print('------------------------------\n',
                #      'COPIED TO CLIPBOARD:\n',
                #      fileStringF)
				#print('------------------------------\n',
                #      'Number of chars copied to the clipboard:\n',
                #      str(len(fileStringF)))
	else:
		print('invalid arg(s). clipboard unmodified.')
except Exception:
	sys.exit()
